
<style>
	body {
		background: #F3F5FA;
	}
	#container {
		width: 600px;
		padding: 30px;
		background: #F8F8F8;
		border: solid 1px #ccc;
		color: #111;
		margin: 20px auto;
		border-radius: 3px;
	}
	
	#specialstuff {
		background: white;
		/*padding: 20px;*/
		color: black;
	}
	#specialstuff a {
		color: #eee;
	}
	
	#fsstatus {
		background: #e33;
		color: #111;
	}
	
	#fsstatus.fullScreenSupported {
		background: #3e3;
	}
	
	#text1 {
		font-size: 5.9vw
	}
	
	#h1 {
		font-size: 6.5vw
	}
	
	#p {
		font-size: 3.5vw
	}
	
	.filled {
		position: absolute;
		top: 0;
		left: 0;
		padding: 0;
		margin: 0;
		z-index: 1050;
	}
	
	.youtube-vid {
		position:fixed; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%; border:none; margin:0; padding:0; overflow:hidden; z-index:999999;
	}
	
	
	</style>
	<div id="container">
		<h1><%= Lottominer::Application::PROJECT_NAME %> - FullScreen Ads</h1>
		
		<div id="specialstuff">
				
			<div id="tabs2" style="display: none">
				<div class="tab-content2">
				
				<% Screen.where(visible: true).order(order: :ASC).each do |s| %>
				  <div class="tab-pane2" delay="<%= s.duration %>" data-type="<%= s.data_type %>">
					  <% if (s.data_type == 'SYSTEM') %>
					    <%= render "/welcome/" + s.content %>
					  <% elsif (s.data_type == 'TEXT') %>
				 		<p id="text1"><%= s.content %></p>
					  <% elsif (s.data_type == 'YOUTUBE') %>
					  	<input id="content" type="hidden" value="<%= s.content %>" />
					  <% else %>
					  
						  	[default-display format] <br/>
					 		<p id="text1"><%= s.content %></p>
					  <% end %>
				  
				  </div>
				<% end %>
			</div>
			
		</div>
		<div id="btn-section">
			<p>Status: <span id="fsstatus"></span>
			<input type="button" value="Go Fullscreen" id="fsbutton" />
			<input type="button" value="Fill Whole Screen" id="fillbutton" />		
		</div>	
	</div>


<script>

/* 
Native FullScreen JavaScript API
-------------
Assumes Mozilla naming conventions instead of W3C for now
*/

(function() {
	var 
		fullScreenApi = { 
			supportsFullScreen: false,
			isFullScreen: function() { return false; }, 
			requestFullScreen: function() {}, 
			cancelFullScreen: function() {},
			fullScreenEventName: '',
			prefix: ''
		},
		browserPrefixes = 'webkit moz o ms khtml'.split(' ');
	
	// check for native support
	if (typeof document.cancelFullScreen != 'undefined') {
		fullScreenApi.supportsFullScreen = true;
	} else {	 
		// check for fullscreen support by vendor prefix
		for (var i = 0, il = browserPrefixes.length; i < il; i++ ) {
			fullScreenApi.prefix = browserPrefixes[i];
			
			if (typeof document[fullScreenApi.prefix + 'CancelFullScreen' ] != 'undefined' ) {
				fullScreenApi.supportsFullScreen = true;
				
				break;
			}
		}
	}
	
	// update methods to do something useful
	if (fullScreenApi.supportsFullScreen) {
		fullScreenApi.fullScreenEventName = fullScreenApi.prefix + 'fullscreenchange';
		
		fullScreenApi.isFullScreen = function() {
			switch (this.prefix) {	
				case '':
					return document.fullScreen;
				case 'webkit':
					return document.webkitIsFullScreen;
				default:
					return document[this.prefix + 'FullScreen'];
			}
		}
		fullScreenApi.requestFullScreen = function(el) {
			return (this.prefix === '') ? el.requestFullScreen() : el[this.prefix + 'RequestFullScreen']();
		}
		fullScreenApi.cancelFullScreen = function(el) {
			return (this.prefix === '') ? document.cancelFullScreen() : document[this.prefix + 'CancelFullScreen']();
		}		
	}

	// jQuery plugin
	if (typeof jQuery != 'undefined') {
		jQuery.fn.requestFullScreen = function() {
	
			return this.each(function() {
				var el = jQuery(this);
				if (fullScreenApi.supportsFullScreen) {
					fullScreenApi.requestFullScreen(el);
				}
			});
		};
	}

	// export api
	window.fullScreenApi = fullScreenApi;	
})();

</script>

<script>

// do something interesting with fullscreen support
var fsButton = document.getElementById('fsbutton'),
	fsElement = document.getElementById('specialstuff'),
	fsStatus = document.getElementById('fsstatus');


if (window.fullScreenApi.supportsFullScreen) {
	fsStatus.innerHTML = 'YES: Your browser supports FullScreen';
	fsStatus.className = 'fullScreenSupported';
	
	// handle button click
	fsButton.addEventListener('click', function() {
		window.fullScreenApi.requestFullScreen(fsElement);
	}, true);
	
	fsElement.addEventListener(fullScreenApi.fullScreenEventName, function() {
		    var width = jQuery(document).width();
    		var height = jQuery(document).height();
		if (fullScreenApi.isFullScreen()) {	
			fsStatus.innerHTML = 'Whoa, you went fullscreen ' + width + 'px by ' + height + 'px';
			$("#specialstuff").width(width).height(height-100);

			$("#btn-section").hide();
			$("#tabs2").show();
		} else {
			fsStatus.innerHTML = 'Back to normal ' + width + 'px by ' + height + 'px';
			$("#specialstuff").width(500).height(200);
			$("#btn-section").show();
			$("#tabs2").hide();
		}
	}, true);
	
} else {
	fsStatus.innerHTML = 'SORRY: Your browser does not support FullScreen';
}

ESCAPE_KEY = 27;
isFilledScreen = false;

$(window).keypress(function(e) {
       if (e.which == ESCAPE_KEY && isFilledScreen) {
       	  $('#specialstuff').removeClass('filled').width(300).height(100);
       	  $("#btn-section").show();
       	  $('tabs2').hide();
       }
       //do stuff with "key" here...
   });

$(document).ready(function() {
	
	$('#fillbutton').click(function(){
	    var width = $(document).width();
		var height = $(document).height();
		$("#specialstuff").width(width).height(height).addClass("filled");

		$("#tabs2").show();	
		$("#btn-section").hide();
			
		isFilledScreen = true;
	});
	
		
	var ds = $('.tab-content2 .tab-pane2');
    var slide1 = ds.hide().eq(0);
    slide1.show();
    setTimeout(showSlide, slide1.attr('delay') * 1000);
    
    function showSlide() {
    	
    	ds.filter(':visible').fadeOut(function(){
            var nextDiv = $(this).next('div');
            if ( nextDiv.length == 0 ) {
            	nextDiv = ds.eq(0);
            } else {
            	if (nextDiv.attr('data-type') == 'YOUTUBE') {
            		videoDiv = nextDiv.find('iframe');
            		if (videoDiv != undefined) {
            			videoDiv.remove();
            		}
            		videoDiv = createIframe(nextDiv.find('#content').val());
            		nextDiv.append(videoDiv);
            	}
            }
            nextDiv.fadeIn();      
			setTimeout(showSlide, nextDiv.attr('delay') * 1000);
        });
    }
    
    function createIframe(videoId) {
    	return $('<iframe class="youtube-vid" src="https://www.youtube.com/embed/' + videoId + '?rel=0&autoplay=1"></iframe>');
    }
    
    // setInterval(function(){
        // ds.filter(':visible').fadeOut(function(){
            // var nextDiv = $(this).next('div');
            // if ( nextDiv.length == 0 ) {
                // ds.eq(0).fadeIn();
            // } else {
                // nextDiv.fadeIn();
            // }
        // });
    // }, 8000);
});

</script>



